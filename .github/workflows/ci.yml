on:
  push:
    branches: [master]
    paths:
      - 'src/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - '.github/workflows/maven.yml'
    types: [opened, synchronize, reopened]

jobs:
  init-workflow:
    name: initworkflow
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  project-build:
    name: Construct JAR
    runs-on: ubuntu-latest
    needs:
      - init-workflow
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: springboot
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Wait for MySQL to be ready
        run: |
          for i in {30..0}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is up!"
              break
            fi
            echo 'Waiting for MySQL...'
            sleep 2
          done

      - name: Check if SQL script exists
        run: |
          if [ ! -f DemoSpringBoot_API/mysql/script/db_springboot_api.sql ]; then
          echo "‚ùå SQL script not found!"
          exit 1
          else
            echo "‚úÖ SQL script found!"
          fi

      - name: Create Database from script
        run: mysql -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} springboot < DemoSpringBoot_API/mysql/script/db_springboot_api.sql

      - name: Install Chrome for selenium
        uses: browser-actions/setup-chrome@latest

      - name: Run Chrome Browser for version control
        run: chrome --version

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Clean & Build Project
        run: |
          echo "üßπ Cleaning project..."
          mvn clean
          echo "‚öôÔ∏è Building project..."
          mvn -B install

      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.organization=bazurogg -Dsonar.projectKey=Bazurogg_DemoSpringBoot_API

      - name: Charging artefact
        uses: actions/upload-artifact@v4
        with:
          name: package.jar
          path: target/*.jar
          retention-days: 1

      - run: echo "This job's status is ${{ job.status }}."
